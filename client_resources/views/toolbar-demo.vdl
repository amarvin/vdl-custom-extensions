<vdl version="4.1">
    <vdl-column>
        <vdl-toolbar heading="A VDL Toolbar">
            <button class="btn"><img src="gfx/lock.svg" alt="Locked"></button>
            <button class="btn btn-primary">Other</button>
        </vdl-toolbar>
    </vdl-column>
    <vdl-column>
        <h3>Toolbar</h3>
        <p class="lead">This view demonstrates the use of the <code>vdl-toolbar</code> custom extension</p>
        <code-panel>
&lt;vdl-toolbar heading=&quot;A VDL Toolbar&quot;&gt;
    &lt;button class=&quot;btn&quot;&gt;&lt;img src=&quot;gfx/lock.svg&quot; alt=&quot;Locked&quot;&gt;&lt;/button&gt;
    &lt;button class=&quot;btn btn-primary&quot;&gt;Other&lt;/button&gt;
&lt;/vdl-toolbar&gt;
        </code-panel>
    </vdl-column>
    <vdl-column>
        <p>The <code>vdl-toolbar</code> tag is a simple custom extension that acts as a container for other content. It is defined as:</p>
        <code-panel>
            VDL('vdl-toolbar', {
            tag: 'vdl-toolbar',
            template: '&lt;h2 class=&quot;title&quot; data-bind=&quot;text: heading&quot;&gt;&lt;/h2&gt;&lt;div class=&quot;pull-right&quot;&gt;&lt;vdl-contents&gt;&lt;/vdl-contents&gt;&lt;/div&gt;',
            createViewModel: function (params) {
            var vm = {};
            vm.heading = VDL.createVariable(params.heading);
            return vm;
            },
            transform: function (element, attrs, api) {
            var builder = api.getComponentParamsBuilder(element)
            .addParam('heading', attrs.heading.rawValue);
            }
            });</code-panel>
    </vdl-column>
</vdl>